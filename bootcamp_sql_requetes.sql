-- Bootcamp SQL Project - 10 Requêtes

USE commercial;

-- 1. Employés masculins, salaire net >= 8000, par ancienneté décroissante
SELECT 
    EMPLOYEE_NUMBER AS `Numéro employé`,
    CONCAT(RPAD(FIRST_NAME, 15, ' '), ' ', LPAD(LAST_NAME, 15, ' ')) AS `Prénom Nom`,
    TIMESTAMPDIFF(YEAR, BIRTH_DATE, CURDATE()) AS `Âge`,
    TIMESTAMPDIFF(YEAR, HIRE_DATE, CURDATE()) AS `Ancienneté (ans)`
FROM EMPLOYEES
WHERE GENDER = 'M'
  AND (SALARY + IFNULL(COMMISSION, 0)) >= 8000
ORDER BY TIMESTAMPDIFF(YEAR, HIRE_DATE, CURDATE()) DESC, HIRE_DATE ASC
LIMIT 1000;

-- 2. Produits répondant aux critères C1 à C5
SELECT 
    PRODUCT_ID,
    PRODUCT_NAME,
    SUPPLIER_ID,
    UNITS_ON_ORDER,
    UNIT_PRICE
FROM PRODUCTS
WHERE PACKAGE LIKE '%bouteille%'
  AND SUBSTR(PRODUCT_NAME, 3, 1) IN ('t','T')
  AND SUPPLIER_ID IN (1,2,3)
  AND UNIT_PRICE BETWEEN 70 AND 200
  AND UNITS_ON_ORDER IS NOT NULL;

-- 3. Clients dans la même région que le fournisseur 1
SELECT 
    CUSTOMER_CODE,
    COMPANY,
    ADDRESS,
    CITY,
    POSTAL_CODE
FROM CUSTOMERS
WHERE (COUNTRY, CITY, RIGHT(POSTAL_CODE, 3)) IN (
    SELECT COUNTRY, CITY, RIGHT(POSTAL_CODE, 3)
    FROM SUPPLIERS
    WHERE SUPPLIER_ID = 1
);

-- 4. Nouveau taux de remise et message selon le numéro de commande
SELECT 
    ORDER_NUMBER,
    CASE 
        WHEN (UNIT_PRICE * QUANTITY) BETWEEN 0 AND 2000 THEN '0 %'
        WHEN (UNIT_PRICE * QUANTITY) BETWEEN 2001 AND 10000 THEN '5 %'
        WHEN (UNIT_PRICE * QUANTITY) BETWEEN 10001 AND 40000 THEN '10 %'
        WHEN (UNIT_PRICE * QUANTITY) BETWEEN 40001 AND 80000 THEN '15 %'
        ELSE '20 %'
    END AS "Nouveau taux de remise",
    CASE 
        WHEN ORDER_NUMBER BETWEEN 10000 AND 10999 THEN 'appliquer l''ancien taux de remise'
        ELSE 'appliquer le nouveau taux de remise'
    END AS Message
FROM ORDER_DETAILS
WHERE ORDER_NUMBER BETWEEN 10998 AND 11003;

-- 5. Fournisseurs de boissons
SELECT DISTINCT 
    S.SUPPLIER_ID,
    S.COMPANY,
    S.ADDRESS,
    S.PHONE
FROM SUPPLIERS S
JOIN PRODUCTS P ON S.SUPPLIER_ID = P.SUPPLIER_ID
JOIN CATEGORIES C ON P.CATEGORY_CODE = C.CATEGORY_CODE
WHERE C.CATEGORY_NAME = 'Boissons';

-- 6. Clients de Berlin ayant commandé au plus 1 dessert
SELECT C.CUSTOMER_CODE
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_CODE = O.CUSTOMER_CODE
JOIN ORDER_DETAILS OD ON O.ORDER_NUMBER = OD.ORDER_NUMBER
JOIN PRODUCTS P ON OD.PRODUCT_REF = P.PRODUCT_ID
JOIN CATEGORIES CAT ON P.CATEGORY_CODE = CAT.CATEGORY_CODE
WHERE C.CITY = 'Berlin'
  AND CAT.CATEGORY_NAME = 'Desserts'
GROUP BY C.CUSTOMER_CODE
HAVING COUNT(DISTINCT P.PRODUCT_ID) <= 1;

-- 7. Clients français + montant total des commandes chaque lundi d’avril 1998
SELECT 
    C.CUSTOMER_CODE,
    C.COMPANY,
    C.PHONE,
    IFNULL(SUM(OD.UNIT_PRICE * OD.QUANTITY), 0) AS Montant_Total,
    C.COUNTRY
FROM CUSTOMERS C
LEFT JOIN ORDERS O ON C.CUSTOMER_CODE = O.CUSTOMER_CODE
LEFT JOIN ORDER_DETAILS OD ON O.ORDER_NUMBER = OD.ORDER_NUMBER
WHERE C.COUNTRY = 'France'
  AND (O.ORDER_DATE IS NULL 
       OR (YEAR(O.ORDER_DATE) = 1998 
           AND MONTH(O.ORDER_DATE) = 4
           AND DAYNAME(O.ORDER_DATE) = 'Monday'))
GROUP BY C.CUSTOMER_CODE, C.COMPANY, C.PHONE, C.COUNTRY;

-- 8. Clients ayant commandé tous les produits
SELECT 
    C.CUSTOMER_CODE,
    C.COMPANY,
    C.PHONE
FROM CUSTOMERS C
WHERE NOT EXISTS (
    SELECT P.PRODUCT_ID
    FROM PRODUCTS P
    WHERE P.PRODUCT_ID NOT IN (
        SELECT OD.PRODUCT_REF
        FROM ORDERS O
        JOIN ORDER_DETAILS OD ON O.ORDER_NUMBER = OD.ORDER_NUMBER
        WHERE O.CUSTOMER_CODE = C.CUSTOMER_CODE
    )
);

-- 9. Nombre de commandes par client français
SELECT 
    C.CUSTOMER_CODE,
    COUNT(O.ORDER_NUMBER) AS Nombre_Commandes
FROM CUSTOMERS C
LEFT JOIN ORDERS O ON C.CUSTOMER_CODE = O.CUSTOMER_CODE
WHERE C.COUNTRY = 'France'
GROUP BY C.CUSTOMER_CODE;

-- 10. Commandes en 1996, 1997 et différence
SELECT 
    SUM(CASE WHEN YEAR(ORDER_DATE) = 1996 THEN 1 ELSE 0 END) AS Commandes_1996,
    SUM(CASE WHEN YEAR(ORDER_DATE) = 1997 THEN 1 ELSE 0 END) AS Commandes_1997,
    (SUM(CASE WHEN YEAR(ORDER_DATE) = 1997 THEN 1 ELSE 0 END) -
     SUM(CASE WHEN YEAR(ORDER_DATE) = 1996 THEN 1 ELSE 0 END)) AS Difference
FROM ORDERS;
